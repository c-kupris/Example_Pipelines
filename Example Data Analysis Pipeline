{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMnCrc5Kq5vffGB/tRAutuS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"8XFCgRc-QrHE","colab":{"base_uri":"https://localhost:8080/","height":652},"executionInfo":{"status":"error","timestamp":1753456857644,"user_tz":240,"elapsed":3306189,"user":{"displayName":"Chandler Kupris","userId":"07807568127760264515"}},"outputId":"0de3b470-20b1-459e-a16a-50af14870ab4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: DEGA in /usr/local/lib/python3.11/dist-packages (0.2.1)\n","Requirement already satisfied: matplotlib>=3.7.2 in /usr/local/lib/python3.11/dist-packages (from DEGA) (3.10.0)\n","Requirement already satisfied: networkx>=3.1 in /usr/local/lib/python3.11/dist-packages (from DEGA) (3.5)\n","Requirement already satisfied: numpy>=1.24.4 in /usr/local/lib/python3.11/dist-packages (from DEGA) (2.0.2)\n","Requirement already satisfied: pandas>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from DEGA) (2.2.2)\n","Requirement already satisfied: patsy>=0.5.3 in /usr/local/lib/python3.11/dist-packages (from DEGA) (1.0.1)\n","Requirement already satisfied: scikit-learn>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from DEGA) (1.6.1)\n","Requirement already satisfied: scipy>=1.10.1 in /usr/local/lib/python3.11/dist-packages (from DEGA) (1.16.0)\n","Requirement already satisfied: seaborn>=0.12.2 in /usr/local/lib/python3.11/dist-packages (from DEGA) (0.13.2)\n","Requirement already satisfied: statsmodels>=0.14.0 in /usr/local/lib/python3.11/dist-packages (from DEGA) (0.14.5)\n","Requirement already satisfied: tqdm>=4.64.1 in /usr/local/lib/python3.11/dist-packages (from DEGA) (4.67.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (4.59.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (1.4.8)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (25.0)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (11.3.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.7.2->DEGA) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=2.0.3->DEGA) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=2.0.3->DEGA) (2025.2)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.3.0->DEGA) (1.5.1)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.3.0->DEGA) (3.6.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib>=3.7.2->DEGA) (1.17.0)\n","Requirement already satisfied: vcfpy in /usr/local/lib/python3.11/dist-packages (0.13.8)\n","Requirement already satisfied: pysam>=0.10.0 in /usr/local/lib/python3.11/dist-packages (from vcfpy) (0.23.3)\n"]},{"output_type":"error","ename":"OSError","evalue":"[Errno 28] No space left on device","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOSError\u001b[0m                                   Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-2-4095307026.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvcf_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m       \u001b[0;32mfor\u001b[0m \u001b[0mthing\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mline\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m         \u001b[0mwriter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriterow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplitlines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeepends\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mOSError\u001b[0m: [Errno 28] No space left on device"]}],"source":["!pip install DEGA\n","!pip install vcfpy\n","\n","import csv\n","import DEGA\n","from keras import layers\n","import numpy as np\n","import pandas as pd\n","import vcfpy\n","\n","file_path = 'annotated_subject_2.vcf'\n","\n","csv_file_path = 'annotated_subject_2.csv'\n","\n","with open(file_path, 'r') as vcf_file:\n","  with open(csv_file_path, 'w') as csv_file:\n","    writer = csv.writer(csv_file)\n","    for line in vcf_file:\n","      for thing in line:\n","        writer.writerow(line.splitlines(keepends=True))\n","\n"]},{"cell_type":"code","source":["read_csv = pd.read_csv(csv_file_path)\n","\n","frame = pd.DataFrame(data=read_csv, columns=['CHROM', 'POS', 'ID',\t'REF',\t'ALT',\t'QUAL',\t'FILTER',\t'INFO',\t'FORMAT'])\n","\n","location_data = pd.concat(objs=[frame['CHROM'], frame['POS']])\n","\n","location_data = location_data.T\n","\n","for line in location_data.values:\n","  if isinstance(thing, float) is False:\n","          line.strip(thing)\n"],"metadata":{"id":"AoVrqK1n-aEz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["frame.head(10)"],"metadata":{"id":"-biracF_-Us3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["phenotype_data = pd.DataFrame(data=[frame['QUAL'], frame['INFO']])\n","\n","phenotype_data = phenotype_data.T\n","\n","print(phenotype_data)\n","print(location_data.value_counts)\n","with open(csv_file_path, 'w') as csv_file:\n","  writer = csv.writer(csv_file, delimiter='.')\n","  for line in phenotype_data.values:\n","    writer.writerow(line)\n","csv_file.close()\n"],"metadata":{"id":"VzvvSJMJ-hJ_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = DEGA.dataset(geneCounts=location_data, phenotypeData=phenotype_data)\n","data.analyse()"],"metadata":{"id":"Npx1zQWi_xEr"},"execution_count":null,"outputs":[]}]}